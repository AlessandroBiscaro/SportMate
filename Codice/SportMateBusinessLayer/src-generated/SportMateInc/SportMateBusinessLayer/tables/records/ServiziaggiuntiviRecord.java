/*
 * This file is generated by jOOQ.
 */
package SportMateInc.SportMateBusinessLayer.tables.records;


import SportMateInc.SportMateBusinessLayer.tables.Serviziaggiuntivi;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiziaggiuntiviRecord extends TableRecordImpl<ServiziaggiuntiviRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ServiziAggiuntivi.idServizio</code>.
     */
    public void setIdservizio(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ServiziAggiuntivi.idServizio</code>.
     */
    public Integer getIdservizio() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ServiziAggiuntivi.nomeServizio</code>.
     */
    public void setNomeservizio(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ServiziAggiuntivi.nomeServizio</code>.
     */
    public String getNomeservizio() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ServiziAggiuntivi.descrizione</code>.
     */
    public void setDescrizione(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ServiziAggiuntivi.descrizione</code>.
     */
    public String getDescrizione() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Serviziaggiuntivi.SERVIZIAGGIUNTIVI.IDSERVIZIO;
    }

    @Override
    public Field<String> field2() {
        return Serviziaggiuntivi.SERVIZIAGGIUNTIVI.NOMESERVIZIO;
    }

    @Override
    public Field<String> field3() {
        return Serviziaggiuntivi.SERVIZIAGGIUNTIVI.DESCRIZIONE;
    }

    @Override
    public Integer component1() {
        return getIdservizio();
    }

    @Override
    public String component2() {
        return getNomeservizio();
    }

    @Override
    public String component3() {
        return getDescrizione();
    }

    @Override
    public Integer value1() {
        return getIdservizio();
    }

    @Override
    public String value2() {
        return getNomeservizio();
    }

    @Override
    public String value3() {
        return getDescrizione();
    }

    @Override
    public ServiziaggiuntiviRecord value1(Integer value) {
        setIdservizio(value);
        return this;
    }

    @Override
    public ServiziaggiuntiviRecord value2(String value) {
        setNomeservizio(value);
        return this;
    }

    @Override
    public ServiziaggiuntiviRecord value3(String value) {
        setDescrizione(value);
        return this;
    }

    @Override
    public ServiziaggiuntiviRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServiziaggiuntiviRecord
     */
    public ServiziaggiuntiviRecord() {
        super(Serviziaggiuntivi.SERVIZIAGGIUNTIVI);
    }

    /**
     * Create a detached, initialised ServiziaggiuntiviRecord
     */
    public ServiziaggiuntiviRecord(Integer idservizio, String nomeservizio, String descrizione) {
        super(Serviziaggiuntivi.SERVIZIAGGIUNTIVI);

        setIdservizio(idservizio);
        setNomeservizio(nomeservizio);
        setDescrizione(descrizione);
        resetChangedOnNotNull();
    }
}
