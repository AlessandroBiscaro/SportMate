/*
 * This file is generated by jOOQ.
 */
package SportMateInc.SportMateBusinessLayer.tables.records;


import SportMateInc.SportMateBusinessLayer.tables.Feedback;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbackRecord extends TableRecordImpl<FeedbackRecord> implements Record5<Integer, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Feedback.idFeedback</code>.
     */
    public void setIdfeedback(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Feedback.idFeedback</code>.
     */
    public Integer getIdfeedback() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Feedback.oggetto</code>.
     */
    public void setOggetto(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Feedback.oggetto</code>.
     */
    public String getOggetto() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Feedback.testo</code>.
     */
    public void setTesto(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Feedback.testo</code>.
     */
    public String getTesto() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Feedback.numLike</code>.
     */
    public void setNumlike(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>Feedback.numLike</code>.
     */
    public Integer getNumlike() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>Feedback.idUtente</code>.
     */
    public void setIdutente(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>Feedback.idUtente</code>.
     */
    public Integer getIdutente() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Feedback.FEEDBACK.IDFEEDBACK;
    }

    @Override
    public Field<String> field2() {
        return Feedback.FEEDBACK.OGGETTO;
    }

    @Override
    public Field<String> field3() {
        return Feedback.FEEDBACK.TESTO;
    }

    @Override
    public Field<Integer> field4() {
        return Feedback.FEEDBACK.NUMLIKE;
    }

    @Override
    public Field<Integer> field5() {
        return Feedback.FEEDBACK.IDUTENTE;
    }

    @Override
    public Integer component1() {
        return getIdfeedback();
    }

    @Override
    public String component2() {
        return getOggetto();
    }

    @Override
    public String component3() {
        return getTesto();
    }

    @Override
    public Integer component4() {
        return getNumlike();
    }

    @Override
    public Integer component5() {
        return getIdutente();
    }

    @Override
    public Integer value1() {
        return getIdfeedback();
    }

    @Override
    public String value2() {
        return getOggetto();
    }

    @Override
    public String value3() {
        return getTesto();
    }

    @Override
    public Integer value4() {
        return getNumlike();
    }

    @Override
    public Integer value5() {
        return getIdutente();
    }

    @Override
    public FeedbackRecord value1(Integer value) {
        setIdfeedback(value);
        return this;
    }

    @Override
    public FeedbackRecord value2(String value) {
        setOggetto(value);
        return this;
    }

    @Override
    public FeedbackRecord value3(String value) {
        setTesto(value);
        return this;
    }

    @Override
    public FeedbackRecord value4(Integer value) {
        setNumlike(value);
        return this;
    }

    @Override
    public FeedbackRecord value5(Integer value) {
        setIdutente(value);
        return this;
    }

    @Override
    public FeedbackRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbackRecord
     */
    public FeedbackRecord() {
        super(Feedback.FEEDBACK);
    }

    /**
     * Create a detached, initialised FeedbackRecord
     */
    public FeedbackRecord(Integer idfeedback, String oggetto, String testo, Integer numlike, Integer idutente) {
        super(Feedback.FEEDBACK);

        setIdfeedback(idfeedback);
        setOggetto(oggetto);
        setTesto(testo);
        setNumlike(numlike);
        setIdutente(idutente);
        resetChangedOnNotNull();
    }
}
