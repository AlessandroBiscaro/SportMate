package com.example.application.views.accountgestore;

import com.vaadin.flow.component.Composite;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.combobox.MultiSelectComboBox;
import com.vaadin.flow.component.datepicker.DatePicker;
import com.vaadin.flow.component.html.H1;
import com.vaadin.flow.component.html.H5;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.FlexComponent.Alignment;
import com.vaadin.flow.component.orderedlayout.FlexComponent.JustifyContentMode;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.component.timepicker.TimePicker;
import com.vaadin.flow.router.Menu;
import com.vaadin.flow.router.PageTitle;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.auth.AnonymousAllowed;
import com.vaadin.flow.theme.lumo.LumoUtility.Gap;
import com.vaadin.flow.theme.lumo.LumoUtility.Padding;
import java.util.ArrayList;
import java.util.List;
import org.vaadin.lineawesome.LineAwesomeIconUrl;

@PageTitle("AccountGestore")
@Route("accountGestore")
@Menu(order = 10, icon = LineAwesomeIconUrl.USER_TIE_SOLID)
@AnonymousAllowed
public class AccountGestoreView extends Composite<VerticalLayout> {

    public AccountGestoreView() {
        H1 h1 = new H1();
        VerticalLayout layoutColumn2 = new VerticalLayout();
        H5 h5 = new H5();
        HorizontalLayout layoutRow = new HorizontalLayout();
        VerticalLayout layoutColumn3 = new VerticalLayout();
        TextField textField = new TextField();
        TextField textField2 = new TextField();
        Button buttonPrimary = new Button();
        VerticalLayout layoutColumn4 = new VerticalLayout();
        TextField textField3 = new TextField();
        TextField textField4 = new TextField();
        VerticalLayout layoutColumn5 = new VerticalLayout();
        DatePicker datePicker = new DatePicker();
        HorizontalLayout layoutRow4 = new HorizontalLayout();
        Button buttonPrimary2 = new Button();
        H5 h52 = new H5();
        VerticalLayout layoutColumn6 = new VerticalLayout();
        HorizontalLayout layoutRow2 = new HorizontalLayout();
        VerticalLayout layoutColumn7 = new VerticalLayout();
        TextField textField5 = new TextField();
        TimePicker timePicker = new TimePicker();
        Button buttonPrimary3 = new Button();
        VerticalLayout layoutColumn8 = new VerticalLayout();
        TextField textField6 = new TextField();
        TimePicker timePicker2 = new TimePicker();
        VerticalLayout layoutColumn9 = new VerticalLayout();
        MultiSelectComboBox multiSelectComboBox = new MultiSelectComboBox();
        HorizontalLayout layoutRow5 = new HorizontalLayout();
        Button buttonPrimary4 = new Button();
        H5 h53 = new H5();
        VerticalLayout layoutColumn10 = new VerticalLayout();
        HorizontalLayout layoutRow3 = new HorizontalLayout();
        VerticalLayout layoutColumn11 = new VerticalLayout();
        TextField textField7 = new TextField();
        Button buttonPrimary5 = new Button();
        VerticalLayout layoutColumn12 = new VerticalLayout();
        getContent().setWidth("100%");
        getContent().getStyle().set("flex-grow", "1");
        h1.setText("SportMate");
        getContent().setAlignSelf(FlexComponent.Alignment.CENTER, h1);
        h1.setWidth("max-content");
        layoutColumn2.setWidthFull();
        getContent().setFlexGrow(1.0, layoutColumn2);
        layoutColumn2.addClassName(Gap.XSMALL);
        layoutColumn2.addClassName(Padding.XSMALL);
        layoutColumn2.setWidth("100%");
        layoutColumn2.getStyle().set("flex-grow", "1");
        h5.setText("Dati personali:");
        h5.setWidth("max-content");
        layoutRow.setWidthFull();
        layoutColumn2.setFlexGrow(1.0, layoutRow);
        layoutRow.addClassName(Gap.MEDIUM);
        layoutRow.setWidth("100%");
        layoutRow.setHeight("282px");
        layoutRow.setAlignItems(Alignment.START);
        layoutRow.setJustifyContentMode(JustifyContentMode.START);
        layoutColumn3.setHeightFull();
        layoutRow.setFlexGrow(1.0, layoutColumn3);
        layoutColumn3.setWidth("100%");
        layoutColumn3.setHeight("282px");
        textField.setLabel("Nome:");
        textField.setWidth("192px");
        textField2.setLabel("Mail:");
        textField2.setWidth("192px");
        buttonPrimary.setText("Modifica");
        buttonPrimary.setWidth("min-content");
        buttonPrimary.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        layoutColumn4.setHeightFull();
        layoutRow.setFlexGrow(1.0, layoutColumn4);
        layoutColumn4.setWidth("100%");
        layoutColumn4.getStyle().set("flex-grow", "1");
        layoutColumn4.setJustifyContentMode(JustifyContentMode.START);
        layoutColumn4.setAlignItems(Alignment.CENTER);
        textField3.setLabel("Cognome:");
        textField3.setWidth("192px");
        textField4.setLabel("Cellulare:");
        textField4.setWidth("192px");
        textField4.setHeight("192px");
        layoutColumn5.setHeightFull();
        layoutRow.setFlexGrow(1.0, layoutColumn5);
        layoutColumn5.setWidth("100%");
        layoutColumn5.setHeight("282px");
        layoutColumn5.setJustifyContentMode(JustifyContentMode.START);
        layoutColumn5.setAlignItems(Alignment.END);
        datePicker.setLabel("Data di nascita:");
        datePicker.setWidth("min-content");
        layoutRow4.setWidthFull();
        layoutColumn5.setFlexGrow(1.0, layoutRow4);
        layoutRow4.addClassName(Gap.MEDIUM);
        layoutRow4.setWidth("100%");
        layoutRow4.getStyle().set("flex-grow", "1");
        buttonPrimary2.setText("Salva");
        layoutColumn5.setAlignSelf(FlexComponent.Alignment.END, buttonPrimary2);
        buttonPrimary2.setWidth("107px");
        buttonPrimary2.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        h52.setText("Dati centro:");
        h52.setWidth("max-content");
        layoutColumn6.setWidthFull();
        layoutColumn2.setFlexGrow(1.0, layoutColumn6);
        layoutColumn6.setWidth("100%");
        layoutColumn6.getStyle().set("flex-grow", "1");
        layoutRow2.setWidthFull();
        layoutColumn6.setFlexGrow(1.0, layoutRow2);
        layoutRow2.addClassName(Gap.MEDIUM);
        layoutRow2.setWidth("100%");
        layoutRow2.getStyle().set("flex-grow", "1");
        layoutColumn7.setHeightFull();
        layoutRow2.setFlexGrow(1.0, layoutColumn7);
        layoutColumn7.setWidth("100%");
        layoutColumn7.getStyle().set("flex-grow", "1");
        textField5.setLabel("Nome commerciale:");
        textField5.setWidth("192px");
        timePicker.setLabel("Orario di apertura:");
        timePicker.setWidth("min-content");
        buttonPrimary3.setText("Modifica");
        buttonPrimary3.setWidth("min-content");
        buttonPrimary3.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        layoutColumn8.setHeightFull();
        layoutRow2.setFlexGrow(1.0, layoutColumn8);
        layoutColumn8.setWidth("100%");
        layoutColumn8.getStyle().set("flex-grow", "1");
        layoutColumn8.setJustifyContentMode(JustifyContentMode.START);
        layoutColumn8.setAlignItems(Alignment.CENTER);
        textField6.setLabel("Indirizzo:");
        textField6.setWidth("192px");
        timePicker2.setLabel("Orario di chiusura:");
        timePicker2.setWidth("min-content");
        layoutColumn9.setHeightFull();
        layoutRow2.setFlexGrow(1.0, layoutColumn9);
        layoutColumn9.setWidth("100%");
        layoutColumn9.getStyle().set("flex-grow", "1");
        layoutColumn9.setJustifyContentMode(JustifyContentMode.START);
        layoutColumn9.setAlignItems(Alignment.END);
        multiSelectComboBox.setLabel("Tipologie campi:");
        multiSelectComboBox.setWidth("min-content");
        setMultiSelectComboBoxSampleData(multiSelectComboBox);
        layoutRow5.setWidthFull();
        layoutColumn9.setFlexGrow(1.0, layoutRow5);
        layoutRow5.addClassName(Gap.MEDIUM);
        layoutRow5.setWidth("100%");
        layoutRow5.getStyle().set("flex-grow", "1");
        buttonPrimary4.setText("Salva");
        layoutColumn9.setAlignSelf(FlexComponent.Alignment.END, buttonPrimary4);
        buttonPrimary4.setWidth("107px");
        buttonPrimary4.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        h53.setText("Credito:");
        h53.setWidth("max-content");
        layoutColumn10.setWidthFull();
        layoutColumn2.setFlexGrow(1.0, layoutColumn10);
        layoutColumn10.setWidth("100%");
        layoutColumn10.getStyle().set("flex-grow", "1");
        layoutRow3.setWidthFull();
        layoutColumn10.setFlexGrow(1.0, layoutRow3);
        layoutRow3.addClassName(Gap.MEDIUM);
        layoutRow3.setWidth("100%");
        layoutRow3.getStyle().set("flex-grow", "1");
        layoutColumn11.setHeightFull();
        layoutRow3.setFlexGrow(1.0, layoutColumn11);
        layoutColumn11.setWidth("100%");
        layoutColumn11.getStyle().set("flex-grow", "1");
        textField7.setLabel("Importo:");
        textField7.setWidth("192px");
        buttonPrimary5.setText("Preleva");
        buttonPrimary5.setWidth("min-content");
        buttonPrimary5.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        layoutColumn12.setHeightFull();
        layoutRow3.setFlexGrow(1.0, layoutColumn12);
        layoutColumn12.setWidth("100%");
        layoutColumn12.getStyle().set("flex-grow", "1");
        getContent().add(h1);
        getContent().add(layoutColumn2);
        layoutColumn2.add(h5);
        layoutColumn2.add(layoutRow);
        layoutRow.add(layoutColumn3);
        layoutColumn3.add(textField);
        layoutColumn3.add(textField2);
        layoutColumn3.add(buttonPrimary);
        layoutRow.add(layoutColumn4);
        layoutColumn4.add(textField3);
        layoutColumn4.add(textField4);
        layoutRow.add(layoutColumn5);
        layoutColumn5.add(datePicker);
        layoutColumn5.add(layoutRow4);
        layoutColumn5.add(buttonPrimary2);
        layoutColumn2.add(h52);
        layoutColumn2.add(layoutColumn6);
        layoutColumn6.add(layoutRow2);
        layoutRow2.add(layoutColumn7);
        layoutColumn7.add(textField5);
        layoutColumn7.add(timePicker);
        layoutColumn7.add(buttonPrimary3);
        layoutRow2.add(layoutColumn8);
        layoutColumn8.add(textField6);
        layoutColumn8.add(timePicker2);
        layoutRow2.add(layoutColumn9);
        layoutColumn9.add(multiSelectComboBox);
        layoutColumn9.add(layoutRow5);
        layoutColumn9.add(buttonPrimary4);
        layoutColumn2.add(h53);
        layoutColumn2.add(layoutColumn10);
        layoutColumn10.add(layoutRow3);
        layoutRow3.add(layoutColumn11);
        layoutColumn11.add(textField7);
        layoutColumn11.add(buttonPrimary5);
        layoutRow3.add(layoutColumn12);
    }

    record SampleItem(String value, String label, Boolean disabled) {
    }

    private void setMultiSelectComboBoxSampleData(MultiSelectComboBox multiSelectComboBox) {
        List<SampleItem> sampleItems = new ArrayList<>();
        sampleItems.add(new SampleItem("first", "First", null));
        sampleItems.add(new SampleItem("second", "Second", null));
        sampleItems.add(new SampleItem("third", "Third", Boolean.TRUE));
        sampleItems.add(new SampleItem("fourth", "Fourth", null));
        multiSelectComboBox.setItems(sampleItems);
        multiSelectComboBox.setItemLabelGenerator(item -> ((SampleItem) item).label());
    }
}
